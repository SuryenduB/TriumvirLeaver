<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule created="1470675123442" id="8a81811b56579b3501566b117cf20160" language="beanshell" modified="1470675424751" name="Delete_accounts" type="Workflow">
  <Description>A rule used by a Workflow to determine a step action or variable value.

Note that an Attributes map of all variables from the current WorkflowContext, merged with the arguments from the Step, is also passed into the workflow rule.</Description>
  <Signature returnType="Object">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="wfcontext">
        <Description>
          The current WorkflowContext.
        </Description>
      </Argument>
      <Argument name="handler">
        <Description>
          The workflow handler associated with the current WorkflowContext.
        </Description>
      </Argument>
      <Argument name="workflow">
        <Description>
          The current Workflow definition.
        </Description>
      </Argument>
      <Argument name="step">
        <Description>
          The current Step.
        </Description>
      </Argument>
      <Argument name="approval">
        <Description>
          The current Approval.
        </Description>
      </Argument>
      <Argument name="item">
        <Description>
          The WorkItem being processed.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="Object">
        <Description>
          The result of the workflow rule; dependent on the rule itself.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source>
import com.triumvir.leaver.Account;
import com.triumvir.leaver.utils.ProvisioningExecutor;
import sailpoint.object.Identity;
import sailpoint.object.Custom;
import sailpoint.object.ProvisioningPlan;
import java.util.Map;

    Custom simpleChoise = context.getObjectByName(Custom.class, "Triumvir-standard-leaver");
    String choise = simpleChoise.get("delete-accounts");
    String disableAccounts = simpleChoise.get("disable-accounts");

    if ("yes".equals(choise) &amp;&amp; "no".equals(disableAccounts))
    {
        for(String id: idsList)
        {
            Identity identity = context.getObjectById(Identity.class, id);
            Account account = new Account();
               Map exceptionList = custom.get("exception-list");
            List deleteListException = exceptionList.get("delete-accounts");
            if(deleteListException.contains(identity.getName())) {
                    System.out.printl("Excluding ... " + identity.getName());
                 }
            else
            {
                  ProvisioningPlan plan = account.deleteAccounts(identity, null);
                    System.out.println(plan.toXml());
                    ProvisioningExecutor provExecutor = new ProvisioningExecutor();
                    provExecutor.executeProvisioning(plan, context);
            }

        }
   
    }</Source>
</Rule>
